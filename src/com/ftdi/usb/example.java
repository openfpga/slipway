/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.ftdi.usb;

public class example {
  public static SWIGTYPE_p_ftdi_context new_ftdi_context() {
    long cPtr = exampleJNI.new_ftdi_context();
    return (cPtr == 0) ? null : new SWIGTYPE_p_ftdi_context(cPtr, false);
  }

  public static SWIGTYPE_p_ftdi_eeprom new_ftdi_eeprom() {
    long cPtr = exampleJNI.new_ftdi_eeprom();
    return (cPtr == 0) ? null : new SWIGTYPE_p_ftdi_eeprom(cPtr, false);
  }

  public static int ftdi_init(SWIGTYPE_p_ftdi_context ftdi) {
    return exampleJNI.ftdi_init(SWIGTYPE_p_ftdi_context.getCPtr(ftdi));
  }

  public static int ftdi_read_data(SWIGTYPE_p_ftdi_context ftdi, byte[] buf, int size) {
    return exampleJNI.ftdi_read_data(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), buf, size);
  }

  public static int ftdi_write_data(SWIGTYPE_p_ftdi_context ftdi, byte[] buf, int size) {
    return exampleJNI.ftdi_write_data(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), buf, size);
  }

  public static int ftdi_usb_open(SWIGTYPE_p_ftdi_context ftdi, int vendor, int product) {
    return exampleJNI.ftdi_usb_open(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), vendor, product);
  }

  public static int ftdi_set_baudrate(SWIGTYPE_p_ftdi_context ftdi, int baudrate) {
    return exampleJNI.ftdi_set_baudrate(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), baudrate);
  }

  public static int ftdi_set_line_property(SWIGTYPE_p_ftdi_context ftdi, int bits, int sbit, int parity) {
    return exampleJNI.ftdi_set_line_property(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), bits, sbit, parity);
  }

  public static int ftdi_set_bitmode(SWIGTYPE_p_ftdi_context ftdi, short bitmask, short mode) {
    return exampleJNI.ftdi_set_bitmode(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), bitmask, mode);
  }

  public static int ftdi_read_pins(SWIGTYPE_p_ftdi_context ftdi, byte[] pins) {
    return exampleJNI.ftdi_read_pins(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), pins);
  }

  public static int ftdi_setflowctrl(SWIGTYPE_p_ftdi_context ftdi, int flowctrl) {
    return exampleJNI.ftdi_setflowctrl(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), flowctrl);
  }

  public static void ftdi_deinit(SWIGTYPE_p_ftdi_context ftdi) {
    exampleJNI.ftdi_deinit(SWIGTYPE_p_ftdi_context.getCPtr(ftdi));
  }

  public static void ftdi_set_usbdev(SWIGTYPE_p_ftdi_context ftdi, SWIGTYPE_p_usb_dev_handle usbdev) {
    exampleJNI.ftdi_set_usbdev(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), SWIGTYPE_p_usb_dev_handle.getCPtr(usbdev));
  }

  public static int ftdi_usb_find_all(SWIGTYPE_p_ftdi_context ftdi, SWIGTYPE_p_p_ftdi_device_list devlist, int vendor, int product) {
    return exampleJNI.ftdi_usb_find_all(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), SWIGTYPE_p_p_ftdi_device_list.getCPtr(devlist), vendor, product);
  }

  public static void ftdi_list_free(SWIGTYPE_p_p_ftdi_device_list devlist) {
    exampleJNI.ftdi_list_free(SWIGTYPE_p_p_ftdi_device_list.getCPtr(devlist));
  }

  public static int ftdi_usb_open_desc(SWIGTYPE_p_ftdi_context ftdi, int vendor, int product, String description, String serial) {
    return exampleJNI.ftdi_usb_open_desc(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), vendor, product, description, serial);
  }

  public static int ftdi_usb_open_dev(SWIGTYPE_p_ftdi_context ftdi, SWIGTYPE_p_usb_device dev) {
    return exampleJNI.ftdi_usb_open_dev(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), SWIGTYPE_p_usb_device.getCPtr(dev));
  }

  public static int ftdi_usb_close(SWIGTYPE_p_ftdi_context ftdi) {
    return exampleJNI.ftdi_usb_close(SWIGTYPE_p_ftdi_context.getCPtr(ftdi));
  }

  public static int ftdi_usb_reset(SWIGTYPE_p_ftdi_context ftdi) {
    return exampleJNI.ftdi_usb_reset(SWIGTYPE_p_ftdi_context.getCPtr(ftdi));
  }

  public static int ftdi_usb_purge_buffers(SWIGTYPE_p_ftdi_context ftdi) {
    return exampleJNI.ftdi_usb_purge_buffers(SWIGTYPE_p_ftdi_context.getCPtr(ftdi));
  }

  public static int ftdi_read_data_set_chunksize(SWIGTYPE_p_ftdi_context ftdi, long chunksize) {
    return exampleJNI.ftdi_read_data_set_chunksize(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), chunksize);
  }

  public static int ftdi_read_data_get_chunksize(SWIGTYPE_p_ftdi_context ftdi, SWIGTYPE_p_unsigned_int chunksize) {
    return exampleJNI.ftdi_read_data_get_chunksize(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), SWIGTYPE_p_unsigned_int.getCPtr(chunksize));
  }

  public static int ftdi_write_data_set_chunksize(SWIGTYPE_p_ftdi_context ftdi, long chunksize) {
    return exampleJNI.ftdi_write_data_set_chunksize(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), chunksize);
  }

  public static int ftdi_write_data_get_chunksize(SWIGTYPE_p_ftdi_context ftdi, SWIGTYPE_p_unsigned_int chunksize) {
    return exampleJNI.ftdi_write_data_get_chunksize(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), SWIGTYPE_p_unsigned_int.getCPtr(chunksize));
  }

  public static int ftdi_enable_bitbang(SWIGTYPE_p_ftdi_context ftdi, short bitmask) {
    return exampleJNI.ftdi_enable_bitbang(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), bitmask);
  }

  public static int ftdi_disable_bitbang(SWIGTYPE_p_ftdi_context ftdi) {
    return exampleJNI.ftdi_disable_bitbang(SWIGTYPE_p_ftdi_context.getCPtr(ftdi));
  }

  public static int ftdi_set_latency_timer(SWIGTYPE_p_ftdi_context ftdi, short latency) {
    return exampleJNI.ftdi_set_latency_timer(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), latency);
  }

  public static int ftdi_get_latency_timer(SWIGTYPE_p_ftdi_context ftdi, SWIGTYPE_p_unsigned_char latency) {
    return exampleJNI.ftdi_get_latency_timer(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), SWIGTYPE_p_unsigned_char.getCPtr(latency));
  }

  public static void ftdi_eeprom_initdefaults(SWIGTYPE_p_ftdi_eeprom eeprom) {
    exampleJNI.ftdi_eeprom_initdefaults(SWIGTYPE_p_ftdi_eeprom.getCPtr(eeprom));
  }

  public static int ftdi_eeprom_build(SWIGTYPE_p_ftdi_eeprom eeprom, byte[] output) {
    return exampleJNI.ftdi_eeprom_build(SWIGTYPE_p_ftdi_eeprom.getCPtr(eeprom), output);
  }

  public static int ftdi_read_eeprom(SWIGTYPE_p_ftdi_context ftdi, byte[] eeprom) {
    return exampleJNI.ftdi_read_eeprom(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), eeprom);
  }

  public static int ftdi_write_eeprom(SWIGTYPE_p_ftdi_context ftdi, byte[] eeprom) {
    return exampleJNI.ftdi_write_eeprom(SWIGTYPE_p_ftdi_context.getCPtr(ftdi), eeprom);
  }

  public static int ftdi_erase_eeprom(SWIGTYPE_p_ftdi_context ftdi) {
    return exampleJNI.ftdi_erase_eeprom(SWIGTYPE_p_ftdi_context.getCPtr(ftdi));
  }

}
